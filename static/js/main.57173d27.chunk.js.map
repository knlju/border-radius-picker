{"version":3,"sources":["BorderGenerator.js","App.js","index.js"],"names":["BorderGenerator","useState","topRange","setTopInput","rightRange","setRightInput","bottomRange","setBottomInput","leftRange","setLeftInput","copiedToClipboard","setCopiedToClipboard","borderRadius","borderRad","setBorderRad","useEffect","newBorderRad","calculateBorderRadius","type","className","min","max","value","step","onChange","e","target","style","orient","onClick","navigator","clipboard","writeText","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mMAoDeA,MAlDf,WAA4B,IAAD,EAEOC,mBAAS,IAFhB,mBAElBC,EAFkB,KAERC,EAFQ,OAGWF,mBAAS,IAHpB,mBAGlBG,EAHkB,KAGNC,EAHM,OAIaJ,mBAAS,IAJtB,mBAIlBK,EAJkB,KAILC,EAJK,OAKSN,mBAAS,IALlB,mBAKlBO,EALkB,KAKPC,EALO,OAMyBR,oBAAS,GANlC,mBAMlBS,EANkB,KAMCC,EAND,OAOSV,mBAAS,CAACW,aAAc,sCAPjC,mBAOlBC,EAPkB,KAOPC,EAPO,KASzBC,qBAAU,WACR,IAAMC,EAAeC,EAAsBf,EAAUE,EAAYE,EAAaE,GAC9EM,EAAaE,GACbL,GAAqB,KACpB,CAACT,EAAUE,EAAYE,EAAaE,IAEvC,IAAMS,EAAwB,SAACf,EAAUE,EAAYE,EAAaE,GAChE,MAAO,CAACI,aAAa,GAAD,OAAKV,EAAL,aAAkB,IAAMA,EAAxB,aAAqC,IAAMI,EAA3C,aAA2DA,EAA3D,eAA6E,IAAME,EAAnF,aAAiG,IAAMJ,EAAvG,aAAsHA,EAAtH,aAAqII,EAArI,OAQtB,OACE,qCACE,uBAAOU,KAAK,QAAQC,UAAU,uBAAuBC,IAAI,IAAIC,IAAI,MAAMC,MAAOpB,EAAUqB,KAAK,IACtFC,SAAU,SAAAC,GAAC,OAAItB,EAAYsB,EAAEC,OAAOJ,UAC3C,8BACE,sBAAKH,UAAU,mBAAmBQ,MAAOd,EAAzC,UACE,uBAAOK,KAAK,QAAQC,UAAU,4BAA4BS,OAAO,WAAWR,IAAI,IAAIC,IAAI,MACjFC,MAAOd,EAAWe,KAAK,IAAIC,SAAU,SAAAC,GAAC,OAAIhB,EAAagB,EAAEC,OAAOJ,UACvE,8BACE,uBAAMO,QAdQ,WACtBC,UAAUC,UAAUC,UAAUnB,EAAUD,cACxCD,GAAqB,IAYb,UACGE,EAAUD,aACX,iCACIF,EAAoB,UAAY,eAIxC,uBAAOQ,KAAK,QAAQC,UAAU,6BAA6BS,OAAO,WAAWR,IAAI,IAAIC,IAAI,MAClFC,MAAOlB,EAAYmB,KAAK,IAAIC,SAAU,SAAAC,GAAC,OAAIpB,EAAcoB,EAAEC,OAAOJ,eAG7E,uBAAOJ,KAAK,QAAQC,UAAU,uBAAuBC,IAAI,IAAIC,IAAI,MAAMC,MAAOhB,EAAaiB,KAAK,IACzFC,SAAU,SAAAC,GAAC,OAAIlB,EAAekB,EAAEC,OAAOJ,cClCrCW,MAXf,WACE,OACE,sBAAKd,UAAU,OAAf,UACE,sDAGA,cAAC,EAAD,QCHNe,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.57173d27.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\r\n\r\nfunction BorderGenerator() {\r\n\r\n  const [topRange, setTopInput] = useState(50)\r\n  const [rightRange, setRightInput] = useState(50)\r\n  const [bottomRange, setBottomInput] = useState(50)\r\n  const [leftRange, setLeftInput] = useState(50)\r\n  const [copiedToClipboard, setCopiedToClipboard] = useState(false)\r\n  const [borderRad, setBorderRad] = useState({borderRadius: \"50% 50% 50% 50% / 50% 50% 50% 50%\"})\r\n\r\n  useEffect(() => {\r\n    const newBorderRad = calculateBorderRadius(topRange, rightRange, bottomRange, leftRange)\r\n    setBorderRad(newBorderRad)\r\n    setCopiedToClipboard(false)\r\n  }, [topRange, rightRange, bottomRange, leftRange])\r\n\r\n  const calculateBorderRadius = (topRange, rightRange, bottomRange, leftRange) => {\r\n    return {borderRadius: `${topRange}% ${100 - topRange}% ${100 - bottomRange}% ${bottomRange}% / ${100 - leftRange}% ${100 - rightRange}% ${rightRange}% ${leftRange}%`}\r\n  }\r\n\r\n  const copyToClipboard = () => {\r\n    navigator.clipboard.writeText(borderRad.borderRadius)\r\n    setCopiedToClipboard(true)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <input type=\"range\" className=\"input-top-and-bottom\" min=\"0\" max=\"100\" value={topRange} step=\"1\"\r\n             onChange={e => setTopInput(e.target.value)}/>\r\n      <div>\r\n        <div className=\"border-generator\" style={borderRad}>\r\n          <input type=\"range\" className=\"input-left-and-right left\" orient=\"vertical\" min=\"0\" max=\"100\"\r\n                 value={leftRange} step=\"1\" onChange={e => setLeftInput(e.target.value)}/>\r\n          <div>\r\n            <span onClick={copyToClipboard}>\r\n              {borderRad.borderRadius}\r\n              <button>\r\n                { copiedToClipboard ? \"Copied!\" : \"Copy!\" }\r\n              </button>\r\n            </span>\r\n          </div>\r\n          <input type=\"range\" className=\"input-left-and-right right\" orient=\"vertical\" min=\"0\" max=\"100\"\r\n                 value={rightRange} step=\"1\" onChange={e => setRightInput(e.target.value)}/>\r\n        </div>\r\n      </div>\r\n      <input type=\"range\" className=\"input-top-and-bottom\" min=\"0\" max=\"100\" value={bottomRange} step=\"1\"\r\n             onChange={e => setBottomInput(e.target.value)}/>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default BorderGenerator;","import BorderGenerator from \"./BorderGenerator\";\n\nfunction App() {\n  return (\n    <div className=\"main\">\n      <h1>\n        Border Radius Picker\n      </h1>\n      <BorderGenerator />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}